#summary Details about programs Reuben demonstrated as part of 2010 Four J's Asia Pacific seminar tour

= Introduction =

The following lists the programs I used as part of my demonstrations on the 2010 Four J's Asia Pacific Tour.

A number of them were taken from the Four J's demo directories so I will direct you to the appropriate demo in the 2.30 release which is now available rather than duplicating them here.

Similarly some of the other programs I'll list the change I made (typically adding something to the .4st or a few lines of code) and you can apply this change to your code and note the effect

The number beside the entry is just something I added in the Genero Studio project workspace to get the programs in the order I intended to display them



= Releases prior to Genero 2.30 =
  * *10 Multi Dialog*
 
       TODO - I'll add comments to my examples and flesh them out a bit.  In the interim, refer to $FGLDIR/demo/MultiDialogs

  * *15 Tree Widget*

       Refer to $FGLDIR/demo/Tree/aui-tree

  * *16 Tree Widget BOM*

       Refer to $FGLDIR/demo/Tree/bill-of-material

  * *18 Picture Flow*

       [http://code.google.com/p/sourcefourjs/downloads/detail?name=PictureFlow_1_0.zip Download this example]

  * *20 Module*

       TODO

  * *25 Rich Text Edit*

       Add the following to your .4st stylesheet.  Run a program that has an INPUT on a TEXTEDIT.  You will get the rich text edit toolbox, and if you look at the text that is saved to the variable you will see that it is HTML
    {{{
   <Style name="TextEdit" >
      <StyleAttribute name="textFormat" value="html" /> 
      <StyleAttribute name="showEditToolBox" value="yes" /> 
   </Style>
    }}}

= Genero 2.30 Release =
  * *50 Drag & Drop*

       Refer to $FGLDIR/demo/DragAndDrop/orders_and_trucks_tree

  * *51 Drag & Drop Excel*

       Add the following to any DISPLAY ARRAY and compile in Genero 2.30 or later.  (you will need to also add a DEFINE dnd ui.DragDrop).  Run and then Drag & Drop one or more rows from this array to Excel.  Also select multiple rows, click editcopy and paste into Excel.

{{{
      BEFORE DISPLAY
         CALL DIALOG.setSelectionMode("scr",TRUE)

      -- Copy selected rows to clipboard
      -- Use DIALOG.selectionToString method
      ON ACTION editcopy
         CALL ui.Interface.frontCall("standard","cbset",DIALOG.selectionToString("scr"),[])

      -- Allow drag operations from here
      ON DRAG_START(dnd)
         CALL dnd.setOperation("copy")
}}}

  * *52 Drag & Drop Explorer*

       TODO

  * *53 Drag & Drop 2 List (A)*

       Refer to $FGLDIR/demo/DragAndDrop/two_lists/nodnd.4gl

  * *54 Drag & Drop 2 List (B)*

       Refer to $FGLDIR/demo/DragAndDrop/two_lists/dnd.4gl

  * *60 Image Map*
      
       Refer to $FGLASDIR/demo/app/webComponentMap

  * *61 Google Maps*

       Awaiting contributing authors permission to post

  * *62 Charts*

       Refer to $FGLASDIR/demo/app/webComponentChart

  * *71 Presentation Styles*

       That program had the following entries in the .4st stylesheet file

       To make the ERROR in the statusbar, red, bold and double-size ...
{{{
   <Style name="Message:error">
      <StyleAttribute name="textColor" value="red" />
      <StyleAttribute name="fontWeight" value="bold" />
      <StyleAttribute name="fontStyle" value="normal" />
      <StyleAttribute name="fontSize" value="2em" />
   </Style>
}}}

      To make the Table column headings match the alignment of the data
{{{
   <Style name="Table" >
      <StyleAttribute name="headerAlignment" value="auto" />
   </Style>
}}}
      To allow the user to freeze table columns, and to freeze the first column
{{{
   <Style name="Table" >
      <StyleAttribute name="tableType" value="frozenTable" />
      <StyleAttribute name="leftFrozenColumns" value="1" />
   </Style>
      Change the background color of the toolbar  
   <Style name="ToolBar" >
      <StyleAttribute name="backgroundColor" value="yellow" />
   </Style>

}}}
      Its not new but in case you haven't seen how to get the alternate line shading 
{{{
   <Style name="Table:odd" >
      <StyleAttribute name="backgroundColor" value="#EEEEEE" />
   </Style>
   <Style name="Table:even" >
      <StyleAttribute name="backgroundColor" value="#DDDDDD" />
   </Style>
}}}
    
      Again not new in 2.30 but how to change the appearance of buttons, you would need to add STYLE="commandLink" and STYLE="link" to the BUTTON definition in the form
{{{
   <Style name="Button.commandLink">
       <StyleAttribute name="buttonType" value="commandLink"/>
   </Style>
   <Style name="Button.link">
       <StyleAttribute name="buttonType" value="link"/>
   </Style>
}}}



  * *72 Animated GIF*
     
       Display any animated gif to an IMAGE field and from 2.30 the animation will occur.

  * *73 Window Size*

       TODO

  * *74 CSV*

       TODO


= Genero 2.30 Release Migration Issues =
  * *90 Set Current Row*

    With a DISPLAY ARRAY you have that has multiple-row select, add the following action (replace "scr" with the name of your screen record)

{{{
      ON ACTION goto1
         CALL dialog.setCurrentRow("scr",1)
}}}
    Observe the difference in behaviour between 2.21 and 2.30 when you select some rows, and then click the goto1 action.  In 2.21 the selected rows will remain selected, in 2.30 the selected rows will be unselected.

  * *91 Menu Action Close*

    Compile and run this program in both 2.21 and 2.30, observe the difference in behaviour when you click on the red-cross (close) in the top right corner of the dialog box.  In 2.21, int_flag would be set and the MENU would exit without setting the result variable.  Typical 4gl didn't cater for this case.
{{{
MAIN
DEFINE result CHAR(1)

   MENU "" ATTRIBUTES(COMMENT="Menu with two options", STYLE="dialog")
      COMMAND "Yes"
         LET result = "Y"
         EXIT MENU
      COMMAND "No"
         LET result = "N"
         EXIT MENU
      --ON ACTION close
         --LET result = "C"
         --EXIT MENU
   END MENU

   -- With 2.21 you can click on the red cross and int_flag will be set to 1 and result will be NULL!!!

   DISPLAY SFMT("int_flag=%1", int_flag)
   DISPLAY SFMT("result=%1", result )
   
END MAIN

}}}